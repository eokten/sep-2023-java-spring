<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.okten</groupId>
	<artifactId>sep-2023-java-spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>sep-2023-java-spring</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<project.build.encoding>UTF-8</project.build.encoding>

		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<swagger-annotations.version>2.2.20</swagger-annotations.version>

		<openapi-generator.version>7.2.0</openapi-generator.version>

		<zenwave.version>1.4.1</zenwave.version>
		<product-service-openapi-spec.path>
			${project.basedir}/src/main/resources/specification/product-service.openapi.yaml
		</product-service-openapi-spec.path>
		<product-service-asyncapi-spec.path>
			${project.basedir}/src/main/resources/specification/product-service.asyncapi.yaml
		</product-service-asyncapi-spec.path>
		<api-package>org.example.rest</api-package>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
			<version>4.1.0</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>


		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator.version}</version> <!-- important for Spring Boot 3.x -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>

						<id>generate-api</id>

						<configuration>
							<inputSpec>${product-service-openapi-spec.path}</inputSpec>

							<!--https://openapi-generator.tech/docs/generators/spring -->
							<generatorName>spring</generatorName>
							<library>spring-boot</library>

							<modelNameSuffix>Dto</modelNameSuffix>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>

							<!-- ... a lot of other parameters here if needed -->

							<!-- configuration -->
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<useBeanValidation>true</useBeanValidation>
								<performBeanValidation>true</performBeanValidation>
								<modelPackage>${api-package}.model</modelPackage>
								<apiPackage>${api-package}.controller</apiPackage>
								<useJakartaEe>true</useJakartaEe> <!-- important for Spring Boot 3.x -->
								<useSpringBoot3>true</useSpringBoot3> <!-- important for Spring Boot 3.x -->
								<sourceFolder>/src/main/java</sourceFolder>
								<implFolder>/src/main/java</implFolder>
								<serializableModel>true</serializableModel>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.github.zenwave360.zenwave-sdk</groupId>
				<artifactId>zenwave-sdk-maven-plugin</artifactId>
				<version>${zenwave.version}</version>
				<configuration>
					<addCompileSourceRoot>true</addCompileSourceRoot>
					<addTestCompileSourceRoot>true</addTestCompileSourceRoot>
				</configuration>
				<executions>
					<execution>
						<id>generate-asyncapi-dtos</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>jsonschema2pojo</generatorName>
							<inputSpec>${product-service-asyncapi-spec.path}</inputSpec>
							<configOptions>
								<modelPackage>org.example.event.model</modelPackage>
								<jsonschema2pojo.useJakartaValidation>true</jsonschema2pojo.useJakartaValidation>
								<jsonschema2pojo.includeJsr303Annotations>false</jsonschema2pojo.includeJsr303Annotations>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>generate-asyncapi-producer</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>spring-cloud-streams3</generatorName>
							<inputSpec>${product-service-asyncapi-spec.path}</inputSpec>
							<configOptions>
								<operationIds>productCreated</operationIds>
								<role>provider</role>
								<style>imperative</style>
								<apiPackage>org.example.event.api</apiPackage>
								<modelPackage>org.example.event.model</modelPackage>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
						<artifactId>asyncapi-spring-cloud-streams3</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.zenwave360.zenwave-sdk.plugins</groupId>
						<artifactId>asyncapi-jsonschema2pojo</artifactId>
						<version>${zenwave.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

</project>
